{"version":3,"sources":["redux/types.js","components/Item/Item.js","redux/actions.js","components/Cart/Cart.js","components/App/App.js","reportWebVitals.js","redux/rootReducer.js","index.js"],"names":["INCREMENT","DECREMENT","ADD","DELETE","connect","state","data","props","dispatch","useDispatch","className","name","price","type","onClick","id","quantity","React","useState","products","setProducts","prices","setPrices","formName","setFormName","formPrices","setFormPrices","formQuantity","setFormQuantity","useEffect","containPrices","containProducts","storage","forEach","element","Number","map","item","onSubmit","event","preventDefault","placeholder","value","onChange","target","required","maxLength","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","newArray","obj","Math","random","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+pBAAaA,G,YAAY,aACZC,EAAY,YACZC,EAAM,MACNC,EAAS,S,kBC+DPC,mBAJf,SAAyBC,GACvB,MAAO,CAAEC,KAAMD,KAGFD,EAzDf,SAAcG,GACZ,IAAMC,EAAWC,cA0BjB,OACE,qBAAIC,UAAU,MAAd,UACE,oBAAIA,UAAU,SAAd,SAAwBH,EAAMI,OAC9B,oBAAID,UAAU,SAAd,SACE,oBAAGA,UAAW,QAAd,UAAwBH,EAAMK,MAA9B,eAEF,oBAAIF,UAAU,SAAd,SACE,sBAAKA,UAAU,UAAf,UACE,wBAAQA,UAAU,kBAAkBG,KAAK,SAASC,QApB1D,WClBK,IAAmBC,EDmBtBP,GCnBsBO,EDmBHR,EAAMQ,GClBpB,CAAEF,KAAMZ,EAAWc,GAAIA,MDqCtB,eAGA,sBAAML,UAAU,iBAAiBK,GAAIR,EAAMQ,GAA3C,SACGR,EAAMS,WAET,wBAAQN,UAAU,kBAAkBG,KAAK,SAASC,QAlC1D,WCdK,IAAmBC,EDetBP,GCfsBO,EDeHR,EAAMQ,GCdpB,CAAEF,KAAMb,EAAWe,GAAIA,MD+CtB,oBAKJ,oBAAIL,UAAU,SAAd,SACE,wBAAQA,UAAU,eAAeI,QAxBvC,WCnBK,IAAuBC,EDoB1BP,GCpB0BO,EDoBHR,EAAMQ,GCnBxB,CAAEF,KAAMV,EAAQY,GAAIA,gBC8IdX,mBAJf,SAAyBC,GACvB,MAAO,CAAEC,KAAMD,KAGFD,EAlJf,SAAcG,GACZ,MAAgCU,IAAMC,WAAtC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BH,IAAMC,WAAlC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAgCL,IAAMC,SAAS,IAA/C,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAoCP,IAAMC,SAAS,IAAnD,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAwCT,IAAMC,SAAS,IAAvD,mBAAOS,EAAP,KAAqBC,EAArB,KACMpB,EAAWC,cAiEjB,OA/DAQ,IAAMY,WAAU,WACd,IAAIC,EAAgB,EAChBC,EAAkB,EACtBxB,EAAMD,KAAK0B,QAAQC,SAAQ,SAACC,GAC1BJ,GAAgCI,EAAQtB,MAAQsB,EAAQlB,SACxDe,GAAoCI,OAAOD,EAAQlB,aAErDM,EAAUQ,GACVV,EAAYW,KACX,CAACxB,EAAMD,KAAK0B,UAuDb,0BAAStB,UAAU,OAAnB,UACE,oBAAIA,UAAU,cAAd,wDACA,oBAAIA,UAAU,eACd,wBAAOA,UAAU,QAAjB,UACE,gCACE,qBAAIA,UAAU,aAAd,UACE,oBAAIA,UAAU,gBAAd,8DACA,oBAAIA,UAAU,gBAAd,sCACA,oBAAIA,UAAU,gBAAd,6CACA,oBAAIA,UAAU,uBAGlB,gCACGH,EAAMD,KAAK0B,QAAQI,KAAI,SAACC,GACvB,OACE,cAAC,EAAD,CACE1B,KAAM0B,EAAK1B,KACXC,MAAOyB,EAAKzB,MAEZG,GAAIsB,EAAKtB,GACTC,SAAUqB,EAAKrB,UAFVqB,EAAKtB,YAQpB,uBAAML,UAAU,gBAAgB4B,SAvCpC,SAAsBC,GACpBA,EAAMC,kBAsCJ,UACE,oBAAG9B,UAAU,cAAb,wFAA2CS,EAA3C,oBACA,oBAAGT,UAAU,cAAb,4EAAyCW,EAAzC,aACA,wBAAQX,UAAU,wBAAwBG,KAAK,SAA/C,gGAIF,uBAAMH,UAAU,WAAW4B,SA1D/B,SAAiBC,GACfA,EAAMC,iBACNhC,EDhDK,CAAEK,KAAMX,EAAKS,KCgDEY,EDhDUX,MCgDAa,EDhDcT,SCgDFW,IAC1CH,EAAY,IACZE,EAAc,IACdE,EAAgB,KAqDd,UACE,uBACElB,UAAU,kBACV+B,YAAY,mDACZ5B,KAAK,OACLF,KAAK,OACL+B,MAAOnB,EACPoB,SAzFR,SAA0BJ,GACxBf,EAAYe,EAAMK,OAAOF,QAyFnBG,UAAQ,IAEV,uBACEnC,UAAU,kBACV+B,YAAY,2BACZ5B,KAAK,SACLF,KAAK,QACL+B,MAAOjB,EACPkB,SA1FR,SAA2BJ,GACzBb,EAAca,EAAMK,OAAOF,QA0FrBG,UAAQ,IAEV,uBACEnC,UAAU,kBACV+B,YAAY,+DACZ5B,KAAK,SACLF,KAAK,WACLmC,UAAU,IACVJ,MAAOf,EACPgB,SA5FR,SAA8BJ,GAC5BX,EAAgBW,EAAMK,OAAOF,QA4FvBG,UAAQ,IAEV,wBAAQnC,UAAU,mBAAmBG,KAAK,SAA1C,sGCpIOkC,MARf,WACE,OACE,qBAAKrC,UAAU,OAAf,SACE,cAAC,EAAD,OCKSsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCJRQ,EAAe,CACnBzB,Q,OCKF,IAAM0B,EAAQC,aDIP,WAAoD,IAA/BtD,EAA8B,uDAAtBoD,EAAcG,EAAQ,uCACxD,GAAIA,EAAO/C,OAASb,EAAW,CAC7B,IAAI6D,EAAWxD,EAAM2B,QAAQI,KAAI,SAAC0B,GAChC,OAAIA,EAAI/C,KAAO6C,EAAO7C,GACb,CACLJ,KAAMmD,EAAInD,KACVC,MAAOkD,EAAIlD,MACXI,SAAU8C,EAAI9C,SAAW,EACzBD,GAAI+C,EAAI/C,IAGH+C,KAGX,MAAO,CAAE9B,QAAS6B,GACb,GAAID,EAAO/C,OAASZ,EAAW,CACpC,IAAI4D,EAAWxD,EAAM2B,QAAQI,KAAI,SAAC0B,GAChC,OAAIA,EAAI/C,KAAO6C,EAAO7C,IAAM+C,EAAI9C,SAAW,EAClC,CACLL,KAAMmD,EAAInD,KACVC,MAAOkD,EAAIlD,MACXI,SAAU8C,EAAI9C,SAAW,EACzBD,GAAI+C,EAAI/C,IAGH+C,KAGX,MAAO,CAAE9B,QAAS6B,GACb,GAAID,EAAO/C,OAASX,EAAK,CAC9B,IAAM4D,EAAM,CACVnD,KAAMiD,EAAOjD,KACbC,MAAOgD,EAAOhD,MACdI,SAAU4C,EAAO5C,SACjBD,GAAIgD,KAAKC,UAEX,MAAO,CAAEhC,QAAQ,CAAE8B,GAAH,mBAAWzD,EAAM2B,WAC5B,GAAI4B,EAAO/C,OAASV,EAAQ,CACjC,IAAI0D,EAAW,GAMf,OALAxD,EAAM2B,QAAQC,SAAQ,SAAC6B,GACjBA,EAAI/C,KAAO6C,EAAO7C,IACpB8C,EAASI,KAAKH,MAGX,CAAE9B,QAAS6B,GAGpB,OAAOxD,KCjDT6D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJW,SAASC,eAAe,SAG1BtB,M","file":"static/js/main.f6db1e8a.chunk.js","sourcesContent":["export const INCREMENT = 'INCREMENT';\r\nexport const DECREMENT = 'DECREMENT';\r\nexport const ADD = 'ADD';\r\nexport const DELETE = 'DELETE';\r\n","import React from 'react';\r\nimport './Item.css';\r\nimport { increment, decrement, deleteProduct } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n/**\r\n * Компонент отвечающий за отрисовку товара.\r\n */\r\nfunction Item(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  /**\r\n   * Прибавляет к текущему количеству еденицу.\r\n   * @param {number} props.id - id товара\r\n   */\r\n  function plus() {\r\n    dispatch(increment(props.id));\r\n  }\r\n\r\n  /**\r\n   * Отнимает от текущего количества еденицу.\r\n   * @param {number} props.id - id товара\r\n   */\r\n  function minus() {\r\n    dispatch(decrement(props.id));\r\n  }\r\n\r\n  /**\r\n   * Удаляет товар из таблицы и массива данных Redux.\r\n   * @param {number} props.id - id товара\r\n   */\r\n  function removeItem() {\r\n    dispatch(deleteProduct(props.id));\r\n  }\r\n\r\n  return (\r\n    <tr className='row'>\r\n      <td className='column'>{props.name}</td>\r\n      <td className='column'>\r\n        <p className={'price'}>{props.price} &#8381;</p>\r\n      </td>\r\n      <td className='column'>\r\n        <div className='counter'>\r\n          <button className='counter__button' type='button' onClick={minus}>\r\n            -\r\n          </button>\r\n          <span className='counter__value' id={props.id}>\r\n            {props.quantity}\r\n          </span>\r\n          <button className='counter__button' type='button' onClick={plus}>\r\n            +\r\n          </button>\r\n        </div>\r\n      </td>\r\n      <td className='column'>\r\n        <button className='item__delete' onClick={removeItem} />\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { data: state };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Item);\r\n","import { INCREMENT, DECREMENT, ADD, DELETE } from './types';\r\n\r\nexport function increment(id) {\r\n  return { type: INCREMENT, id: id };\r\n}\r\n\r\nexport function decrement(id) {\r\n  return { type: DECREMENT, id: id };\r\n}\r\n\r\nexport function addProduct(name, price, quantity) {\r\n  return { type: ADD, name: name, price: price, quantity: quantity };\r\n}\r\nexport function deleteProduct(id) {\r\n  return { type: DELETE, id: id };\r\n}\r\n","import React from 'react';\r\nimport './Cart.css';\r\nimport Item from '../Item/Item';\r\nimport { connect } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProduct } from '../../redux/actions';\r\n\r\n/**\r\n * Компонент отвечающий за отрисовку корзины.\r\n */\r\nfunction Cart(props) {\r\n  const [products, setProducts] = React.useState();\r\n  const [prices, setPrices] = React.useState();\r\n  const [formName, setFormName] = React.useState('');\r\n  const [formPrices, setFormPrices] = React.useState('');\r\n  const [formQuantity, setFormQuantity] = React.useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    let containPrices = 0;\r\n    let containProducts = 0;\r\n    props.data.storage.forEach((element) => {\r\n      containPrices = containPrices + element.price * element.quantity;\r\n      containProducts = containProducts + Number(element.quantity);\r\n    });\r\n    setPrices(containPrices);\r\n    setProducts(containProducts);\r\n  }, [props.data.storage]);\r\n\r\n  /**\r\n   * Обрабатывает ввод пользователя в input-name.\r\n   * @param {*} event - общие свойства и методы для всех событий.\r\n   */\r\n  function handleNameChange(event) {\r\n    setFormName(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Обрабатывает ввод пользователя в input-price.\r\n   * @param {*} event - общие свойства и методы для всех событий.\r\n   */\r\n  function handlePriceChange(event) {\r\n    setFormPrices(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Обрабатывает ввод пользователя в input-quantity.\r\n   * @param {*} event - общие свойства и методы для всех событий.\r\n   */\r\n  function handleQuantityChange(event) {\r\n    setFormQuantity(event.target.value);\r\n  }\r\n\r\n  /**\r\n   * Сабмит формы, добавляет товар в таблицу и в массив данных Redux.\r\n   * @param {*} event - общие свойства и методы для всех событий.\r\n   */\r\n  function formAdd(event) {\r\n    event.preventDefault();\r\n    dispatch(addProduct(formName, formPrices, formQuantity));\r\n    setFormName('');\r\n    setFormPrices('');\r\n    setFormQuantity('');\r\n  }\r\n\r\n  /**\r\n   * Сабмит формы, при наличии бэкенда отправка массива данных с корзины.\r\n   * @param {*} event - общие свойства и методы для всех событий.\r\n   */\r\n  function formCheckout(event) {\r\n    event.preventDefault();\r\n    // api\r\n    //   .nameMethod(props.data.storage)\r\n    //   .then((res) => {\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  }\r\n\r\n  return (\r\n    <section className='cart'>\r\n      <h1 className='cart__title'>Корзина</h1>\r\n      <hr className='cart__line' />\r\n      <table className='table'>\r\n        <tbody>\r\n          <tr className='table__row'>\r\n            <th className='table__column'>Название</th>\r\n            <th className='table__column'>Цена</th>\r\n            <th className='table__column'>Кол-во</th>\r\n            <th className='table__column'></th>\r\n          </tr>\r\n        </tbody>\r\n        <tbody>\r\n          {props.data.storage.map((item) => {\r\n            return (\r\n              <Item\r\n                name={item.name}\r\n                price={item.price}\r\n                key={item.id}\r\n                id={item.id}\r\n                quantity={item.quantity}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <form className='form-checkout' onSubmit={formCheckout}>\r\n        <p className='cart__total'>Всего товаров: {products} шт.</p>\r\n        <p className='cart__total'>Общая сумма: {prices} &#8381;</p>\r\n        <button className='form-checkout__button' type='submit'>\r\n          Оформить заказ\r\n        </button>\r\n      </form>\r\n      <form className='form-add' onSubmit={formAdd}>\r\n        <input\r\n          className='form-add__input'\r\n          placeholder='Название'\r\n          type='text'\r\n          name='name'\r\n          value={formName}\r\n          onChange={handleNameChange}\r\n          required\r\n        ></input>\r\n        <input\r\n          className='form-add__input'\r\n          placeholder='Цена'\r\n          type='number'\r\n          name='price'\r\n          value={formPrices}\r\n          onChange={handlePriceChange}\r\n          required\r\n        ></input>\r\n        <input\r\n          className='form-add__input'\r\n          placeholder='Количество'\r\n          type='number'\r\n          name='quantity'\r\n          maxLength='4'\r\n          value={formQuantity}\r\n          onChange={handleQuantityChange}\r\n          required\r\n        ></input>\r\n        <button className='form-add__button' type='submit'>\r\n          Добавить товар\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { data: state };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Cart);\r\n","import React from 'react';\nimport './App.css';\nimport Cart from '../Cart/Cart';\n\nfunction App() {\n  return (\n    <div className='page'>\n      <Cart />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { INCREMENT, DECREMENT, ADD, DELETE } from './types';\r\nimport data from '../data.json';\r\n\r\nconst initialState = {\r\n  storage: data,\r\n};\r\n\r\n/**\r\n * Изменяет переданный массив и возвращает новый.\r\n * @param {object} state - массив данных для отрисовки товара.\r\n * @param {function} action - функция возвращающая объект.\r\n * @returns {object} - измененный массив.\r\n */\r\nexport function rootReducer(state = initialState, action) {\r\n  if (action.type === INCREMENT) {\r\n    let newArray = state.storage.map((obj) => {\r\n      if (obj.id === action.id) {\r\n        return {\r\n          name: obj.name,\r\n          price: obj.price,\r\n          quantity: obj.quantity + 1,\r\n          id: obj.id,\r\n        };\r\n      } else {\r\n        return obj;\r\n      }\r\n    });\r\n    return { storage: newArray };\r\n  } else if (action.type === DECREMENT) {\r\n    let newArray = state.storage.map((obj) => {\r\n      if (obj.id === action.id && obj.quantity > 1) {\r\n        return {\r\n          name: obj.name,\r\n          price: obj.price,\r\n          quantity: obj.quantity - 1,\r\n          id: obj.id,\r\n        };\r\n      } else {\r\n        return obj;\r\n      }\r\n    });\r\n    return { storage: newArray };\r\n  } else if (action.type === ADD) {\r\n    const obj = {\r\n      name: action.name,\r\n      price: action.price,\r\n      quantity: action.quantity,\r\n      id: Math.random(),\r\n    };\r\n    return { storage: [obj, ...state.storage] };\r\n  } else if (action.type === DELETE) {\r\n    let newArray = [];\r\n    state.storage.forEach((obj) => {\r\n      if (obj.id !== action.id) {\r\n        newArray.push(obj);\r\n      }\r\n    });\r\n    return { storage: newArray };\r\n  }\r\n\r\n  return state;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}